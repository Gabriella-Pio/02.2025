// src/arvore/TreeStats.java

package arvore;

/**
 * Classe que armazena e formata estat√≠sticas de performance da √°rvore
 * Utilizada para an√°lise comparativa entre BST e AVL
 */
public class TreeStats {
    private int comparacoes; // N√∫mero total de compara√ß√µes realizadas
    private int atribuicoes; // N√∫mero total de atribui√ß√µes realizadas
    private int rotacoes; // N√∫mero total de rota√ß√µes (apenas AVL)
    private double tempoMilissegundos; // Tempo de execu√ß√£o em milissegundos
    private int altura; // Altura final da √°rvore

    /**
     * Construtor para BST (sem rota√ß√µes)
     */
    public TreeStats(int comparacoes, int atribuicoes, double tempoMilissegundos, int altura) {
        this(comparacoes, atribuicoes, 0, tempoMilissegundos, altura); // Rota√ß√µes = 0 para BST
    }

    /**
     * Construtor completo para AVL (com rota√ß√µes)
     */
    public TreeStats(int comparacoes, int atribuicoes, int rotacoes,
            double tempoMilissegundos, int altura) {
        this.comparacoes = comparacoes;
        this.atribuicoes = atribuicoes;
        this.rotacoes = rotacoes;
        this.tempoMilissegundos = tempoMilissegundos;
        this.altura = altura;
    }

    /**
     * Retorna representa√ß√£o formatada das estat√≠sticas
     * 
     * @return String formatada com emojis para melhor visualiza√ß√£o
     */
    @Override
    public String toString() {
        return String.format(
                "üìä ESTAT√çSTICAS DA ESTRUTURA:\n" +
                        "‚Ä¢ Compara√ß√µes: %d\n" + // Opera√ß√µes de compara√ß√£o
                        "‚Ä¢ Atribui√ß√µes: %d\n" + // Opera√ß√µes de atribui√ß√£o
                        "‚Ä¢ Rota√ß√µes: %d\n" + // Rota√ß√µes de balanceamento
                        "‚Ä¢ Tempo de execu√ß√£o: %.2f ms\n" + // Tempo total
                        "‚Ä¢ Altura da √°rvore: %d\n" + // Altura da estrutura
                        "‚Ä¢ Balanceada: %s", // Indica se √© balanceada
                comparacoes, atribuicoes, rotacoes, tempoMilissegundos, altura,
                (rotacoes > 0) ? "Sim (AVL)" : "N√£o" // Detec√ß√£o autom√°tica do tipo
        );
    }

    // M√©todos de acesso (getters) para os campos privados

    public int getComparacoes() {
        return comparacoes;
    }

    public int getAtribuicoes() {
        return atribuicoes;
    }

    public int getRotacoes() {
        return rotacoes;
    }

    public double getTempoMilissegundos() {
        return tempoMilissegundos;
    }

    public int getAltura() {
        return altura;
    }
}